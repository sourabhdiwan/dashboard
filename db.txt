import os
import oracledb
from config import config_dict
from dotenv import load_dotenv

load_dotenv()

def get_db_connection(env):
    # Initialize Oracle client (Thin mode)
    oracledb.init_oracle_client()

    # Load environment-specific configuration
    config = config_dict[env]
    db_user = config.DB_USER
    db_password = config.DB_PASSWORD
    db_dsn = config.DB_DSN

    try:
        # Connect to the Oracle database
        connection = oracledb.connect(
            user=db_user,
            password=db_password,
            dsn=db_dsn
        )
        return connection
    except oracledb.Error as e:
        raise ConnectionError(f"Failed to connect to {env}: {e}")

def fetch_data_from_db(env):
    try:
        connection = get_db_connection(env)
        cursor = connection.cursor()
        cursor.execute("SELECT * FROM your_table")
        results = cursor.fetchall()
        cursor.close()
        connection.close()
        return results
    except ConnectionError as ce:
        return str(ce)  # Return the error message if connection fails

def fetch_data_from_all_envs():
    results = {}
    for env in config_dict.keys():
        result = fetch_data_from_db(env)
        if isinstance(result, str):  # Check if the result is an error message
            results[env] = {'error': result}
        else:
            results[env] = {'data': result}
    return results




from flask import Flask, render_template
from db import fetch_data_from_all_envs

app = Flask(__name__)

@app.route('/')
def index():
    try:
        # Fetch data from all environments
        all_results = fetch_data_from_all_envs()
        # Render the results in the HTML template
        return render_template('index.html', results=all_results)
    except Exception as e:
        # Handle database connection errors
        return f"Error: {e}"

if __name__ == '__main__':
    app.run(debug=True)





<!-- templates/index.html -->
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Oracle Query Results</title>
</head>
<body>
    <h1>Oracle Query Results</h1>
    {% for env, result in results.items() %}
    <h2>Environment: {{ env }}</h2>
    {% if result.error %}
    <p>Error: {{ result.error }}</p>
    {% else %}
    <table border="1">
        <thead>
            <tr>
                <!-- Adjust the table headers based on your table columns -->
                <th>Column 1</th>
                <th>Column 2</th>
                <th>Column 3</th>
                <!-- Add more headers as needed -->
            </tr>
        </thead>
        <tbody>
            {% for row in result.data %}
            <tr>
                {% for column in row %}
                <td>{{ column }}</td>
                {% endfor %}
            </tr>
            {% endfor %}
        </tbody>
    </table>
    {% endif %}
    {% endfor %}
</body>
</html>
